TOP SQL WITH WAITS - 
--------------------
select * from (select sql_id,event,count(*) from dba_hist_active_sess_history 
where sample_time between to_date('12-06-2022 08:00:00','dd-mm-yyyy hh24:mi:ss')
and to_date('12-06-2022 08:19:00','dd-mm-yyyy hh24:mi:ss') group by sql_id,event order by 3 desc) where rownum<=20;


TOP SQL WITH WAITS FOR LAST 1 HOUR - 
-----------------------------------
select * from (select sql_id,event,count(*) from dba_hist_active_sess_history 
where sample_time > sysdate - 1/24 group by sql_id,event order by 3 desc) where rownum<=20;

BLOCKING SESSION DETAILS -
------------------------
select * from (
select sql_id,event,blocking_session,BLOCKING_SESSION_SERIAL#,count(*) from dba_hist_active_sess_history 
where sample_time between to_date('25-06-2022 02:24:00','dd-mm-yyyy hh24:mi:ss')
and to_date('25-06-2022 02:24:00','dd-mm-yyyy hh24:mi:ss') and BLOCKING_SESSION_SERIAL# is not null 
group by sql_id,event,blocking_session,BLOCKING_SESSION_SERIAL# order by 5 desc) where rownum<=20;


BLOCKING SESSION DETAILS FOR LAST 15 MINS - 
------------------------------------------
select * from (
select sql_id,event,blocking_session,BLOCKING_SESSION_SERIAL#,count(*) from gv$active_session_history
where sample_time >= sysdate - 15/(24*60) and BLOCKING_SESSION_SERIAL# is not null 
group by sql_id,event,blocking_session,BLOCKING_SESSION_SERIAL# order by 5 desc) where rownum<=20;

select * from (
select sql_id,event,blocking_session,BLOCKING_SESSION_SERIAL#,count(*) from dba_hist_active_sess_history 
where sample_time >= sysdate - 15/(24*60) and BLOCKING_SESSION_SERIAL# is not null 
group by sql_id,event,blocking_session,BLOCKING_SESSION_SERIAL# order by 5 desc) where rownum<=20;


WAITS ON CURRENT OBJECTS - 
-------------------------
select * 
from 
(select MIN(SAMPLE_TIME), MAX(SAMPLE_TIME),SQL_ID,EVENT,CURRENT_OBJ#,COUNT(DISTINCT SESSION_ID),COUNT(1)
  from DBA_HIST_ACTIVE_SESS_HISTORY 
 where sample_time between to_date('10-06-2022 04:00:00','dd-mm-yyyy hh24:mi:ss') and to_date('10-06-2022 04:10:00','dd-mm-yyyy hh24:mi:ss')
   --and EVENT='gc transaction table'
 group by SQL_ID,EVENT,CURRENT_OBJ#
 order by COUNT(1) desc)
 where rownum <=20;



FIND OUT THE HIDDEN PARAMETER VALUES - 

col NAME for a40
col CURRENT_VALUE for a30
col DEFAULT_VALUE for a30
col DEFAULT_T_F for a30
set linesize 200

SELECT
ksppinm   name,
ksppstvl  Current_Value,
b.ksppstdfl Default_Value,
b.ksppstdf  Default_T_F
FROM
x$ksppi a,
x$ksppsv b
WHERE
a.indx=b.indx
AND
substr(ksppinm,1,1) = '_'
AND
ksppinm like '%_lm_idle_connection_check_interval%';--'%_complex_view_merging%'--'%_replace_virtual_columns%'--'%cost_based%';
--'%_gc_persistent_read_mostly%' --'%_lm_drm_disable%' --'%enable_pdb_close_abort%' --'%undo_autotune%'


set lines 200 pages 300
col File#:Block# for a20
col sid_ser_instid for a15
col status for a8
col state for a8
col con_id for 9
select sql_id,sid||','||serial#||',@'||inst_id "sid_ser_instid" ,p1||':'||p2 "File#:Block#",round(WAIT_TIME_MICRO/1e6,6) wait_seconds,status,state,final_blocking_session from gv$session where event in ('gc current request') order by 4;

select sql_id,sid||','||serial#||',@'||inst_id "sid_ser_instid" ,p1||':'||p2 "File#:Block#",round(WAIT_TIME_MICRO/1e6,6) wait_seconds,status,state,final_blocking_session from gv$session where event in ('gc buffer busy acquire') order by 4;

select sql_id,sid||','||serial#||',@'||inst_id "sid_ser_instid" ,p1||':'||p2 "File#:Block#",round(WAIT_TIME_MICRO/1e6,6) wait_seconds,status,state,final_blocking_session from gv$session where event in ('gc cr block remote read') order by 4;

SQL> select sql_id,sid||','||serial#||',@'||inst_id "sid_ser_instid" ,p1||':'||p2 "File#:Block#",round(WAIT_TIME_MICRO/1e6,6) wait_seconds,status,state, final_blocking_session from gv$session where event in ('gc cr request') order by 4;

SQL> select sql_id,sid||','||serial#||',@'||inst_id "sid_ser_instid" ,p1||':'||p2 "File#:Block#",round(WAIT_TIME_MICRO/1e6,6) wait_seconds,status,state, final_blocking_session from gv$session where event in ('library cache lock') order by 4;

SQL> select sql_id,sid||','||serial#||',@'||inst_id "sid_ser_instid" ,p1||':'||p2 "File#:Block#",round(WAIT_TIME_MICRO/1e6,6) wait_seconds,status,state, final_blocking_session from gv$session where event in ('latch: MGA shared context latch') order by 4;


FIND THE BLOCKING SESSIONS AND BLOCKERS  - 

1.set lines 500
select count(1),FINAL_BLOCKING_SESSION||':'||FINAL_BLOCKING_INSTANCE from gv$session where FINAL_BLOCKING_SESSION_STATUS='VALID' group by FINAL_BLOCKING_SESSION||':'||FINAL_BLOCKING_INSTANCE ;

2.select sid,WAIT_EVENT,BLOCKER_INSTANCE_ID,BLOCKER_SID,BLOCKER_SESS_SERIAL#,inst_id from gv$session_blockers;

3.set lines 1000
col MODULE for a50
col USERNAME for a40
select username,sql_id,module,program from gv$session where sid=<SID>;

FOR RAC ENVIRONMENT - 

SELECT gvh.SID     sessid
    , gvs.serial# serial
    , gvh.inst_id inst_id
    , holder.username holder
    , waiter.username waiter
	, waiter.sql_id "waiter_SQL"
	,holder.sql_id "holder_SQL"
FROM gv$lock    gvh
  , gv$lock    gvw
  , gv$session gvs
  , gv$session holder
  , gv$session waiter
WHERE (gvh.id1, gvh.id2) IN
     (-- Lock mode in which the process requests the lock
      SELECT id1, id2 FROM gv$lock WHERE request = 0  
      INTERSECT
      -- Lock mode in which the session holds the lock
      SELECT id1, id2 FROM gv$lock WHERE lmode = 0    
   )
AND gvh.id1 = gvw.id1
AND gvh.id2 = gvw.id2
AND gvh.request = 0
AND gvw.lmode = 0
AND gvh.SID = gvs.SID
AND gvh.inst_id = gvs.inst_id
and ( holder.sid = gvh.sid and holder.inst_id = gvh.inst_id )
and ( waiter.sid = gvw.sid and waiter.inst_id = gvw.inst_id )
/


FIND OSPID FROM SID -  

1. Set lines 200
col sid format 99999
col username format a15
col osuser format a15
select a.sid, a.serial#,a.username, a.osuser, b.spid
from v$session a, v$process b
where a.paddr= b.addr
and a.sid=<SID>
order by a.sid;
